/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(7);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(2);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(6)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../node_modules/css-loader/index.js!../node_modules/sass-loader/index.js!./style.scss", function() {
				var newContent = require("!!../node_modules/css-loader/index.js!../node_modules/sass-loader/index.js!./style.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports
	
	
	// module
	exports.push([module.id, "@-webkit-keyframes down_arrow_bounce {\n  0%, 20%, 50%, 80%, 100% {\n    -webkit-transform: translateY(0); }\n  40% {\n    -webkit-transform: translateY(-30px); }\n  60% {\n    -webkit-transform: translateY(-15px); } }\n\n@keyframes down_arrow_bounce {\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0); }\n  40% {\n    transform: translateY(-30px); }\n  60% {\n    transform: translateY(-15px); } }\n\nsection {\n  width: 100%;\n  height: 100vh;\n  overflow: hidden; }\n\nh4.section-heading {\n  text-align: center;\n  font-size: 4vw;\n  color: #444;\n  margin: 24px auto; }\n\nsection.hero {\n  background: url(" + __webpack_require__(4) + ");\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center; }\n  section.hero:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    z-index: 1; }\n  section.hero img {\n    padding-top: 225px;\n    display: block;\n    width: 60%;\n    margin: 24px auto;\n    position: relative;\n    z-index: 2; }\n  section.hero h2 {\n    position: relative;\n    z-index: 2;\n    font-size: 3vw;\n    display: block;\n    text-align: center;\n    color: white; }\n  section.hero h3 {\n    position: relative;\n    z-index: 2;\n    margin: 10px auto;\n    font-size: 2vw;\n    display: block;\n    text-align: center;\n    color: white; }\n  section.hero a.cta {\n    position: relative;\n    z-index: 2;\n    display: block;\n    padding: 24px 48px;\n    color: white;\n    font-size: 2vw;\n    text-align: center;\n    text-decoration: none;\n    margin: 48px auto;\n    width: 300px;\n    border: 2px solid white;\n    transition: 0.2s all; }\n    section.hero a.cta:hover {\n      transform: scale(1.1); }\n\nsection.schedule {\n  background: #e9e9e9; }\n\nsection.about .left {\n  height: 100%;\n  background: #444;\n  float: left;\n  display: block;\n  justify-content: center;\n  align-items: center;\n  width: 50%; }\n  section.about .left h4 {\n    color: #222;\n    margin: 36px auto; }\n  section.about .left p {\n    display: block;\n    color: white;\n    width: 480px;\n    height: 100%;\n    text-align: center;\n    margin: 48px auto;\n    line-height: 3vw;\n    font-size: 1.8vw; }\n\nsection.about .right {\n  float: right;\n  display: block;\n  flex-direction: column;\n  width: 50%;\n  height: 100%;\n  padding: 24px 0; }\n  section.about .right .top, section.about .right .bottom {\n    height: 50%;\n    width: 100%;\n    display: flex;\n    flex-direction: column; }\n    section.about .right .top h2, section.about .right .bottom h2 {\n      margin: 10px auto;\n      color: #888;\n      font-size: 3vw; }\n    section.about .right .top p, section.about .right .bottom p {\n      font-size: 1.2vw;\n      color: #777;\n      width: 400px;\n      margin: 12px auto; }\n  section.about .right img {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    margin: 0 auto; }\n  section.about .right div.socials {\n    width: 120px;\n    margin: 0 auto; }\n    section.about .right div.socials a {\n      color: #777;\n      font-size: 1.5vw;\n      display: inline-block;\n      margin: 0 8px; }\n\nsection.gallery {\n  background: #e9e9e9; }\n  section.gallery .img-carousel {\n    font-size: 4vw;\n    width: 60%;\n    margin: 0 auto;\n    color: #222; }\n    section.gallery .img-carousel .gallery-img {\n      line-height: 80vh;\n      text-align: center;\n      font-size: 5vw;\n      margin: 0 auto;\n      width: 100%;\n      height: 80vh;\n      border: 1px solid #333; }\n\nsection.dance-teams {\n  height: auto; }\n  section.dance-teams .team-entry {\n    clear: both;\n    width: 100%;\n    margin: 48px auto; }\n    section.dance-teams .team-entry .left {\n      float: left;\n      width: 49%; }\n      section.dance-teams .team-entry .left .img-carousel {\n        font-size: 4vw;\n        width: 60%;\n        margin: 0 auto;\n        color: #222; }\n        section.dance-teams .team-entry .left .img-carousel .gallery-img {\n          text-align: center;\n          font-size: 5vw;\n          margin: 0 auto;\n          width: 100%;\n          height: 30vh;\n          border: 1px solid #333; }\n    section.dance-teams .team-entry .right {\n      float: right;\n      width: 49%; }\n\nsection.contact {\n  position: relative; }\n  section.contact .left {\n    float: left;\n    width: 40%;\n    display: block;\n    height: 100%;\n    padding: 10px;\n    position: relative; }\n    section.contact .left h5 {\n      margin-left: 24px;\n      color: #444;\n      font-size: 1.5vw;\n      max-width: 425px; }\n    section.contact .left p {\n      margin: 24px;\n      color: #444;\n      font-size: 1.3vw; }\n    section.contact .left .socials {\n      position: absolute;\n      bottom: 200px;\n      width: 325px;\n      left: 50%;\n      transform: translateX(-50%); }\n      section.contact .left .socials a {\n        color: #777;\n        font-size: 2vw;\n        margin: 0 24px; }\n  section.contact .right {\n    height: 100%;\n    float: right;\n    width: 60%;\n    display: block; }\n    section.contact .right .map {\n      width: 95%;\n      height: 80%;\n      background: url(" + __webpack_require__(5) + ");\n      background-size: cover;\n      background-repeat: no-repeat;\n      border: 1px solid black; }\n  section.contact p.copyright {\n    position: absolute;\n    bottom: 10px;\n    left: 50%;\n    transform: translateX(-50%); }\n\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px; }\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box; }\n\nbody {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n  font-family: \"Roboto Condensed\", \"Source Sans Pro\", \"Lato\", \"sans-serif\"; }\n\n.site-wrapper {\n  display: block;\n  height: 100%;\n  width: 100%; }\n  .site-wrapper nav {\n    position: fixed;\n    right: 24px;\n    top: 24px;\n    z-index: 5;\n    width: 100px;\n    height: 100px; }\n    .site-wrapper nav .nav-icon {\n      width: 60px;\n      height: 45px;\n      position: relative;\n      float: right;\n      -webkit-transform: rotate(0deg);\n      -moz-transform: rotate(0deg);\n      -o-transform: rotate(0deg);\n      transform: rotate(0deg);\n      -webkit-transition: .5s ease-in-out;\n      -moz-transition: .5s ease-in-out;\n      -o-transition: .5s ease-in-out;\n      transition: .5s ease-in-out;\n      cursor: pointer; }\n      .site-wrapper nav .nav-icon.open span:nth-child(1) {\n        top: 18px;\n        width: 0%;\n        left: 50%;\n        background: white; }\n      .site-wrapper nav .nav-icon.open span:nth-child(2) {\n        -webkit-transform: rotate(45deg);\n        -moz-transform: rotate(45deg);\n        -o-transform: rotate(45deg);\n        transform: rotate(45deg);\n        background: white; }\n      .site-wrapper nav .nav-icon.open span:nth-child(3) {\n        -webkit-transform: rotate(-45deg);\n        -moz-transform: rotate(-45deg);\n        -o-transform: rotate(-45deg);\n        transform: rotate(-45deg);\n        background: white; }\n      .site-wrapper nav .nav-icon.open span:nth-child(4) {\n        top: 18px;\n        width: 0%;\n        left: 50%;\n        background: white; }\n      .site-wrapper nav .nav-icon span {\n        display: block;\n        position: absolute;\n        height: 9px;\n        width: 100%;\n        background: #001449;\n        border-radius: 9px;\n        opacity: 1;\n        left: 0;\n        -webkit-transform: rotate(0deg);\n        -moz-transform: rotate(0deg);\n        -o-transform: rotate(0deg);\n        transform: rotate(0deg);\n        -webkit-transition: .25s ease-in-out;\n        -moz-transition: .25s ease-in-out;\n        -o-transition: .25s ease-in-out;\n        transition: .25s ease-in-out; }\n        .site-wrapper nav .nav-icon span:nth-child(1) {\n          top: 0px; }\n        .site-wrapper nav .nav-icon span:nth-child(2), .site-wrapper nav .nav-icon span:nth-child(3) {\n          top: 18px; }\n        .site-wrapper nav .nav-icon span:nth-child(4) {\n          top: 36px; }\n  .site-wrapper .menu-container {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    z-index: 3;\n    opacity: 0;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    color: #00227c;\n    font-size: 3em;\n    background: none;\n    transition: 0.3s all; }\n    .site-wrapper .menu-container.active {\n      display: flex;\n      background-color: #002996;\n      opacity: 1; }\n      .site-wrapper .menu-container.active ul.menu {\n        display: block; }\n    .site-wrapper .menu-container ul.menu {\n      display: none;\n      list-style-type: none; }\n      .site-wrapper .menu-container ul.menu li {\n        margin: 100px auto; }\n        .site-wrapper .menu-container ul.menu li.active a {\n          color: white; }\n        .site-wrapper .menu-container ul.menu li a {\n          color: #001b63;\n          text-decoration: none;\n          transition: 0.2s all; }\n          .site-wrapper .menu-container ul.menu li a:hover {\n            color: white; }\n\n.clearfix:after {\n  content: \" \";\n  /* Older browser do not support empty content */\n  visibility: hidden;\n  display: block;\n  height: 0;\n  clear: both; }\n", ""]);
	
	// exports


/***/ }),
/* 3 */
/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "studiopic.jpeg";

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "map.png";

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }),
/* 7 */
/***/ (function(module, exports) {

	'use strict';
	
	$(document).ready(function () {
	  var $navIcon = $('.nav-icon');
	  $navIcon.on('click', function () {
	    $(this).toggleClass('open');
	    $('.menu-container').toggleClass('active');
	  });
	
	  $('.img-carousel.gallery').slick({
	    slidesToShow: 1,
	    slidesToScroll: 1,
	    autoplay: true,
	    autoplaySpeed: 4000,
	    dots: true
	  });
	
	  $('.img-carousel.team').slick({
	    slidesToShow: 1,
	    slidesToScroll: 1,
	    autoplay: true,
	    autoplaySpeed: 4000
	  });
	
	  // let $splash = document.querySelector('section.hero');
	  // let heroWaypoint = new Waypoint({
	  //   element: $splash,
	  //   handler: function(direction) {
	  //     if(direction === 'down')
	  //     $splash.classList.add('wp-fadeup');
	  //   }
	  // });
	  //
	  //
	  // let $project = document.querySelector('section.projects');
	  // let projectWaypoint = new Waypoint({
	  //   element: $project,
	  //   handler: function(direction) {
	  //     if(direction === 'down')
	  //     $project.classList.add('wp-fadein');
	  //   },
	  //   offset: '35%'
	  // });
	  $('a[href^="#"]').on('click', function (e) {
	    e.preventDefault();
	    var target = this.hash;
	    var $target = $(target);
	    $('html, body').stop().animate({
	      'scrollTop': $target.offset().top
	    }, 900, 'swing');
	  });
	});

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,